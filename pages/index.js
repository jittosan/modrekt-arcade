import Head from 'next/head'
import styles from '../styles/index.module.scss'
import {BsCaretLeftFill, BsCaretRightFill} from 'react-icons/bs'
// import audio elements
// import useSound from 'use-sound'
// import mainMenuTrack from '../public/audio/tracks/Main Menu.mp3'
import { useEffect, useState } from 'react'
import Callout from '../components/Callout'
import Field from '../components/Field'
import MainMenu from '../components/MainMenu'


export default function Home() {
  // main game loop configuration
  const [playing, setPlaying] = useState(false)

  // track player position
  const [playerPosition, setPlayerPosition] = useState(1)
  const moveLeft = () => {
    if (playerPosition > 0) {
      setPlayerPosition(playerPosition-1)
    }
  }
  const moveRight = () => {
    if (playerPosition < 3) {
      setPlayerPosition(playerPosition+1)
    }
  }

  // const [play] = useSound(boopSfx)

  // useEffect(() => {play()}, [])

  // state to display callout
  const [showCallout, setShowCallout] = useState(false)
  useEffect(() => {
    if (showCallout) {
      // show callout for 5s
      setTimeout(() => setShowCallout(false), 5000)
    } else {
      //randomly generate callout after 20s
      setTimeout(() => setShowCallout(true), Math.random()*10000+20000)
      // setTimeout(() => setShowCallout(true), 2000)
    }
  }, [showCallout])

  return (
    <>
      <Head>
        <title>UNI-verse</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {/* {showCallout ? <Callout /> : ''} */}
        <div className={styles.content}>
          <div className={styles.headerContainer}>
            <h1>UNI-verse</h1>
            <span>Can you beat the system?</span>
          </div>
          <div className={styles.gameContent}>
            {playing ? <Field playerPosition={playerPosition} /> : <MainMenu play={() => setPlaying(true)} />}
          </div>
          {playing ? <div className={styles.buttonContainer}>
            <div className={`${styles.button} ${styles.leftButton}`} onClick={moveLeft}><BsCaretLeftFill /></div>
            <div className={`${styles.button} ${styles.rightButton}`} onClick={moveRight}><BsCaretRightFill /></div>
          </div> : ''}
        </div>
      </main>
    </>
  )
}
